# Generated by Django 2.1.7 on 2019-05-09 14:48

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompletedQuest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_earned', models.IntegerField()),
                ('date_completed', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CorrectAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=1000)),
                ('deleted', models.BooleanField(default=False)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CorrectlyAnsweredQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='IncorrectAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=1000)),
                ('deleted', models.BooleanField(default=False)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=1000)),
                ('project_description', models.CharField(max_length=1000)),
                ('project_random_phrase', models.CharField(max_length=255)),
                ('project_editable', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quest_name', models.CharField(max_length=250)),
                ('quest_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('quest_points_earned', models.IntegerField()),
                ('deleted', models.BooleanField(default=False)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('quest_path_number', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(blank=True, max_length=1000, null=True)),
                ('question_type', models.CharField(max_length=45)),
                ('deleted', models.BooleanField(default=False)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Quest')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ldap', models.CharField(max_length=45)),
                ('user_first_name', models.CharField(max_length=45)),
                ('user_last_name', models.CharField(max_length=45)),
                ('user_email', models.CharField(max_length=45)),
                ('user_manager_ldap', models.CharField(max_length=45)),
                ('user_director_ldap', models.CharField(max_length=45)),
                ('user_password', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('completed_project', models.BooleanField(default=False)),
                ('current_quest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Quest')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.User')),
            ],
        ),
        migrations.AddField(
            model_name='incorrectanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Question'),
        ),
        migrations.AddField(
            model_name='correctlyansweredquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Question'),
        ),
        migrations.AddField(
            model_name='correctlyansweredquestion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.User'),
        ),
        migrations.AddField(
            model_name='correctanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Question'),
        ),
        migrations.AddField(
            model_name='completedquest',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.Quest'),
        ),
        migrations.AddField(
            model_name='completedquest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_extension.User'),
        ),
    ]
